# Создаем переменную для хранения элемента строки.
# Приведем все символы строки при проверке, чтобы игнорировать различия между заглавными и строчными буквами.
# Удаляем все пробелы из строки, чтобы игнорировать пробелы при проверке.
# Сделаем сравнение строки с её перевёрнутой копией.
# Если строка равна своей перевёрнутой версии, значит, она является палиндромом, и функция вернет True.
# В противном случае вернется False.

def is_palindrome(s):
    s = s.lower().replace(" ", "")
    return s == s[::-1]

print(is_palindrome("Довод"))
print(is_palindrome("Повод"))

# Оценка сложности алгоритма:

# 1. s.lower() — преобразование строки в нижний регистр. Сложность этой операции — O(n), где n — длина строки.
# 2. replace(" ", "") — удаление всех пробелов из строки. Сложность этой операции также O(n), поскольку в худшем случае нужно пройти по всей строке.
# 3. s == s[::-1] — сравнение строки с ее обращенной версией. Сложность обращения строки — O(n), и сложность сравнения — O(n).
# Итог: Сложность этого алгоритма — O(n)